// Generated by view binder compiler. Do not edit!
package com.talor.fields.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.talor.fields.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFieldBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton fieldChat;

  @NonNull
  public final CardView fieldLAYDetails;

  @NonNull
  public final CardView fieldLAYList;

  @NonNull
  public final TextView fieldLBLStatusAddress;

  @NonNull
  public final TextView fieldLBLStatusBags;

  @NonNull
  public final TextView fieldLBLStatusBenches;

  @NonNull
  public final TextView fieldLBLStatusWater;

  @NonNull
  public final MaterialButton fieldMBTNRate;

  @NonNull
  public final TextView fieldName;

  @NonNull
  public final RatingBar fieldRBRate;

  @NonNull
  public final ImageButton goToMap;

  @NonNull
  public final Button joinBTN;

  @NonNull
  public final RecyclerView listRVUsers;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final TextView parkLBLAddress;

  @NonNull
  public final TextView parkLBLBags;

  @NonNull
  public final TextView parkLBLBenches;

  @NonNull
  public final TextView parkLBLFeatures;

  @NonNull
  public final TextView parkLBLWater;

  @NonNull
  public final RelativeLayout top;

  private ActivityFieldBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton fieldChat,
      @NonNull CardView fieldLAYDetails, @NonNull CardView fieldLAYList,
      @NonNull TextView fieldLBLStatusAddress, @NonNull TextView fieldLBLStatusBags,
      @NonNull TextView fieldLBLStatusBenches, @NonNull TextView fieldLBLStatusWater,
      @NonNull MaterialButton fieldMBTNRate, @NonNull TextView fieldName,
      @NonNull RatingBar fieldRBRate, @NonNull ImageButton goToMap, @NonNull Button joinBTN,
      @NonNull RecyclerView listRVUsers, @NonNull ImageView logo, @NonNull TextView parkLBLAddress,
      @NonNull TextView parkLBLBags, @NonNull TextView parkLBLBenches,
      @NonNull TextView parkLBLFeatures, @NonNull TextView parkLBLWater,
      @NonNull RelativeLayout top) {
    this.rootView = rootView;
    this.fieldChat = fieldChat;
    this.fieldLAYDetails = fieldLAYDetails;
    this.fieldLAYList = fieldLAYList;
    this.fieldLBLStatusAddress = fieldLBLStatusAddress;
    this.fieldLBLStatusBags = fieldLBLStatusBags;
    this.fieldLBLStatusBenches = fieldLBLStatusBenches;
    this.fieldLBLStatusWater = fieldLBLStatusWater;
    this.fieldMBTNRate = fieldMBTNRate;
    this.fieldName = fieldName;
    this.fieldRBRate = fieldRBRate;
    this.goToMap = goToMap;
    this.joinBTN = joinBTN;
    this.listRVUsers = listRVUsers;
    this.logo = logo;
    this.parkLBLAddress = parkLBLAddress;
    this.parkLBLBags = parkLBLBags;
    this.parkLBLBenches = parkLBLBenches;
    this.parkLBLFeatures = parkLBLFeatures;
    this.parkLBLWater = parkLBLWater;
    this.top = top;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFieldBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFieldBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_field, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFieldBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.field_chat;
      ImageButton fieldChat = ViewBindings.findChildViewById(rootView, id);
      if (fieldChat == null) {
        break missingId;
      }

      id = R.id.field_LAY_details;
      CardView fieldLAYDetails = ViewBindings.findChildViewById(rootView, id);
      if (fieldLAYDetails == null) {
        break missingId;
      }

      id = R.id.field_LAY_list;
      CardView fieldLAYList = ViewBindings.findChildViewById(rootView, id);
      if (fieldLAYList == null) {
        break missingId;
      }

      id = R.id.field_LBL_status_address;
      TextView fieldLBLStatusAddress = ViewBindings.findChildViewById(rootView, id);
      if (fieldLBLStatusAddress == null) {
        break missingId;
      }

      id = R.id.field_LBL_status_bags;
      TextView fieldLBLStatusBags = ViewBindings.findChildViewById(rootView, id);
      if (fieldLBLStatusBags == null) {
        break missingId;
      }

      id = R.id.field_LBL_status_benches;
      TextView fieldLBLStatusBenches = ViewBindings.findChildViewById(rootView, id);
      if (fieldLBLStatusBenches == null) {
        break missingId;
      }

      id = R.id.field_LBL_status_water;
      TextView fieldLBLStatusWater = ViewBindings.findChildViewById(rootView, id);
      if (fieldLBLStatusWater == null) {
        break missingId;
      }

      id = R.id.field_MBTN_rate;
      MaterialButton fieldMBTNRate = ViewBindings.findChildViewById(rootView, id);
      if (fieldMBTNRate == null) {
        break missingId;
      }

      id = R.id.field_name;
      TextView fieldName = ViewBindings.findChildViewById(rootView, id);
      if (fieldName == null) {
        break missingId;
      }

      id = R.id.field_RB_rate;
      RatingBar fieldRBRate = ViewBindings.findChildViewById(rootView, id);
      if (fieldRBRate == null) {
        break missingId;
      }

      id = R.id.go_to_map;
      ImageButton goToMap = ViewBindings.findChildViewById(rootView, id);
      if (goToMap == null) {
        break missingId;
      }

      id = R.id.join_BTN;
      Button joinBTN = ViewBindings.findChildViewById(rootView, id);
      if (joinBTN == null) {
        break missingId;
      }

      id = R.id.list_RV_users;
      RecyclerView listRVUsers = ViewBindings.findChildViewById(rootView, id);
      if (listRVUsers == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.park_LBL_address;
      TextView parkLBLAddress = ViewBindings.findChildViewById(rootView, id);
      if (parkLBLAddress == null) {
        break missingId;
      }

      id = R.id.park_LBL_bags;
      TextView parkLBLBags = ViewBindings.findChildViewById(rootView, id);
      if (parkLBLBags == null) {
        break missingId;
      }

      id = R.id.park_LBL_benches;
      TextView parkLBLBenches = ViewBindings.findChildViewById(rootView, id);
      if (parkLBLBenches == null) {
        break missingId;
      }

      id = R.id.park_LBL_features;
      TextView parkLBLFeatures = ViewBindings.findChildViewById(rootView, id);
      if (parkLBLFeatures == null) {
        break missingId;
      }

      id = R.id.park_LBL_water;
      TextView parkLBLWater = ViewBindings.findChildViewById(rootView, id);
      if (parkLBLWater == null) {
        break missingId;
      }

      id = R.id.top;
      RelativeLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      return new ActivityFieldBinding((RelativeLayout) rootView, fieldChat, fieldLAYDetails,
          fieldLAYList, fieldLBLStatusAddress, fieldLBLStatusBags, fieldLBLStatusBenches,
          fieldLBLStatusWater, fieldMBTNRate, fieldName, fieldRBRate, goToMap, joinBTN, listRVUsers,
          logo, parkLBLAddress, parkLBLBags, parkLBLBenches, parkLBLFeatures, parkLBLWater, top);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
